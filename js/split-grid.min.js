/*! split-grid - v1.0.9 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Split=e()}(this,function(){"use strict";var e=function(t,e){return Number(t.slice(0,-1*e.length))},i=function(t){return t.endsWith("px")?{value:t,type:"px",numeric:e(t,"px")}:t.endsWith("fr")?{value:t,type:"fr",numeric:e(t,"fr")}:t.endsWith("%")?{value:t,type:"%",numeric:e(t,"%")}:"auto"===t?{value:t,type:"auto"}:null},r=function(t){return t.split(" ").map(i)},s=function(e,t,i){return t.concat(i).map(function(t){return t.style[e]}).filter(function(t){return void 0!==t&&""!==t})},o=function(t){for(var e=0;e<t.length;e++)if(0<t[e].numeric)return e;return null};function n(i){var t;return(t=[]).concat.apply(t,Array.from(i.ownerDocument.styleSheets).map(function(t){var e=[];try{e=Array.from(t.cssRules||[])}catch(t){}return e})).filter(function(t){var e=!1;try{e=i.matches(t.selectorText)}catch(t){}return e})}var a=function(){return!1},h=function(t,e,i){t.style[e]=i},c=function(t,e,i){var r=t[e];return void 0!==r?r:i},u=function(t,e,i){this.direction=t,this.element=e.element,this.track=e.track,this.trackTypes={},"column"===t?(this.gridTemplateProp="grid-template-columns",this.gridGapProp="grid-column-gap",this.cursor=c(i,"columnCursor",c(i,"cursor","col-resize")),this.snapOffset=c(i,"columnSnapOffset",c(i,"snapOffset",30)),this.dragInterval=c(i,"columnDragInterval",c(i,"dragInterval",1)),this.clientAxis="clientX",this.optionStyle=c(i,"gridTemplateColumns")):"row"===t&&(this.gridTemplateProp="grid-template-rows",this.gridGapProp="grid-row-gap",this.cursor=c(i,"rowCursor",c(i,"cursor","row-resize")),this.snapOffset=c(i,"rowSnapOffset",c(i,"snapOffset",30)),this.dragInterval=c(i,"rowDragInterval",c(i,"dragInterval",1)),this.clientAxis="clientY",this.optionStyle=c(i,"gridTemplateRows")),this.onDragStart=c(i,"onDragStart",a),this.onDragEnd=c(i,"onDragEnd",a),this.onDrag=c(i,"onDrag",a),this.writeStyle=c(i,"writeStyle",h),this.startDragging=this.startDragging.bind(this),this.stopDragging=this.stopDragging.bind(this),this.drag=this.drag.bind(this),this.minSizeStart=e.minSizeStart,this.minSizeEnd=e.minSizeEnd,e.element&&(this.element.addEventListener("mousedown",this.startDragging),this.element.addEventListener("touchstart",this.startDragging))};u.prototype.getDimensions=function(){var t=this.grid.getBoundingClientRect(),e=t.width,i=t.height,r=t.top,s=t.bottom,n=t.left,o=t.right;"column"===this.direction?(this.start=r,this.end=s,this.size=i):"row"===this.direction&&(this.start=n,this.end=o,this.size=e)},u.prototype.getSizeAtTrack=function(t,e){return function(t,e,i,r){void 0===i&&(i=0),void 0===r&&(r=!1);var s=r?t+1:t;return e.slice(0,s).reduce(function(t,e){return t+e.numeric},0)+(i?t*i:0)}(t,this.computedPixels,this.computedGapPixels,e)},u.prototype.getSizeOfTrack=function(t){return this.computedPixels[t].numeric},u.prototype.getRawTracks=function(){var t=s(this.gridTemplateProp,[this.grid],n(this.grid));if(t.length)return t[0];if(this.optionStyle)return this.optionStyle;throw Error("Unable to determine grid template tracks from styles.")},u.prototype.getGap=function(){var t=s(this.gridGapProp,[this.grid],n(this.grid));return t.length?t[0]:null},u.prototype.getRawComputedTracks=function(){return window.getComputedStyle(this.grid)[this.gridTemplateProp]},u.prototype.getRawComputedGap=function(){return window.getComputedStyle(this.grid)[this.gridGapProp]},u.prototype.setTracks=function(t){this.tracks=t.split(" "),this.trackValues=r(t)},u.prototype.setComputedTracks=function(t){this.computedTracks=t.split(" "),this.computedPixels=r(t)},u.prototype.setGap=function(t){this.gap=t},u.prototype.setComputedGap=function(t){var e,i;this.computedGap=t,this.computedGapPixels=(e="px",((i=this.computedGap).endsWith(e)?Number(i.slice(0,-1*e.length)):null)||0)},u.prototype.getMousePosition=function(t){return"touches"in t?t.touches[0][this.clientAxis]:t[this.clientAxis]},u.prototype.startDragging=function(t){if(!("button"in t&&0!==t.button)){t.preventDefault(),this.element?this.grid=this.element.parentNode:this.grid=t.target.parentNode,this.getDimensions(),this.setTracks(this.getRawTracks()),this.setComputedTracks(this.getRawComputedTracks()),this.setGap(this.getGap()),this.setComputedGap(this.getRawComputedGap());var e=this.trackValues.filter(function(t){return"%"===t.type}),i=this.trackValues.filter(function(t){return"fr"===t.type});if(this.totalFrs=i.length,this.totalFrs){var r=o(i);null!==r&&(this.frToPixels=this.computedPixels[r].numeric/i[r].numeric)}if(e.length){var s=o(e);null!==s&&(this.percentageToPixels=this.computedPixels[s].numeric/e[s].numeric)}var n=this.getSizeAtTrack(this.track,!1)+this.start;if(this.dragStartOffset=this.getMousePosition(t)-n,this.aTrack=this.track-1,!(this.track<this.tracks.length-1))throw Error("Invalid track index: "+this.track+". Track must be between two other tracks and only "+this.tracks.length+" tracks were found.");this.bTrack=this.track+1,this.aTrackStart=this.getSizeAtTrack(this.aTrack,!1)+this.start,this.bTrackEnd=this.getSizeAtTrack(this.bTrack,!0)+this.start,this.dragging=!0,window.addEventListener("mouseup",this.stopDragging),window.addEventListener("touchend",this.stopDragging),window.addEventListener("touchcancel",this.stopDragging),window.addEventListener("mousemove",this.drag),window.addEventListener("touchmove",this.drag),this.grid.addEventListener("selectstart",a),this.grid.addEventListener("dragstart",a),this.grid.style.userSelect="none",this.grid.style.webkitUserSelect="none",this.grid.style.MozUserSelect="none",this.grid.style.pointerEvents="none",this.grid.style.cursor=this.cursor,window.document.body.style.cursor=this.cursor,this.onDragStart(this.direction,this.track)}},u.prototype.stopDragging=function(){this.dragging=!1,this.cleanup(),this.onDragEnd(this.direction,this.track),this.needsDestroy&&(this.element&&(this.element.removeEventListener("mousedown",this.startDragging),this.element.removeEventListener("touchstart",this.startDragging)),this.destroyCb(),this.needsDestroy=!1,this.destroyCb=null)},u.prototype.drag=function(t){var e=this.getMousePosition(t),i=this.getSizeOfTrack(this.track),r=this.aTrackStart+this.minSizeStart+this.dragStartOffset+this.computedGapPixels,s=this.bTrackEnd-this.minSizeEnd-this.computedGapPixels-(i-this.dragStartOffset);e<r+this.snapOffset&&(e=r),s-this.snapOffset<e&&(e=s),e<r?e=r:s<e&&(e=s);var n=e-this.aTrackStart-this.dragStartOffset-this.computedGapPixels,o=this.bTrackEnd-e+this.dragStartOffset-i-this.computedGapPixels;if(1<this.dragInterval){var a=Math.round(n/this.dragInterval)*this.dragInterval;o-=a-n,n=a}if(n<this.minSizeStart&&(n=this.minSizeStart),o<this.minSizeEnd&&(o=this.minSizeEnd),"px"===this.trackValues[this.aTrack].type)this.tracks[this.aTrack]=n+"px";else if("fr"===this.trackValues[this.aTrack].type)if(1===this.totalFrs)this.tracks[this.aTrack]="1fr";else{var h=n/this.frToPixels;this.tracks[this.aTrack]=h+"fr"}else if("%"===this.trackValues[this.aTrack].type){var c=n/this.percentageToPixels;this.tracks[this.aTrack]=c+"%"}if("px"===this.trackValues[this.bTrack].type)this.tracks[this.bTrack]=o+"px";else if("fr"===this.trackValues[this.bTrack].type)if(1===this.totalFrs)this.tracks[this.bTrack]="1fr";else{var u=o/this.frToPixels;this.tracks[this.bTrack]=u+"fr"}else if("%"===this.trackValues[this.bTrack].type){var d=o/this.percentageToPixels;this.tracks[this.bTrack]=d+"%"}var l=this.tracks.join(" ");this.writeStyle(this.grid,this.gridTemplateProp,l),this.onDrag(this.direction,this.track,l)},u.prototype.cleanup=function(){window.removeEventListener("mouseup",this.stopDragging),window.removeEventListener("touchend",this.stopDragging),window.removeEventListener("touchcancel",this.stopDragging),window.removeEventListener("mousemove",this.drag),window.removeEventListener("touchmove",this.drag),this.grid&&(this.grid.removeEventListener("selectstart",a),this.grid.removeEventListener("dragstart",a),this.grid.style.userSelect="",this.grid.style.webkitUserSelect="",this.grid.style.MozUserSelect="",this.grid.style.pointerEvents="",this.grid.style.cursor=""),window.document.body.style.cursor=""},u.prototype.destroy=function(t,e){void 0===t&&(t=!0),t||!1===this.dragging?(this.cleanup(),this.element&&(this.element.removeEventListener("mousedown",this.startDragging),this.element.removeEventListener("touchstart",this.startDragging)),e&&e()):(this.needsDestroy=!0,e&&(this.destroyCb=e))};var d=function(t,e,i){return e in t?t[e]:i},l=function(r,s){return function(t){if(t.track<1)throw Error("Invalid track index: "+t.track+". Track must be between two other tracks.");var e="column"===r?s.columnMinSizes||{}:s.rowMinSizes||{},i="column"===r?"columnMinSize":"rowMinSize";return new u(r,Object.assign({},{minSizeStart:d(e,t.track-1,c(s,i,c(s,"minSize",0))),minSizeEnd:d(e,t.track+1,c(s,i,c(s,"minSize",0)))},t),s)}},p=function(e){var i=this;this.columnGutters={},this.rowGutters={},this.options=Object.assign({},{columnGutters:e.columnGutters||[],rowGutters:e.rowGutters||[],columnMinSizes:e.columnMinSizes||{},rowMinSizes:e.rowMinSizes||{}},e),this.options.columnGutters.forEach(function(t){i.columnGutters[e.track]=l("column",i.options)(t)}),this.options.rowGutters.forEach(function(t){i.rowGutters[e.track]=l("row",i.options)(t)})};return p.prototype.addColumnGutter=function(t,e){this.columnGutters[e]&&this.columnGutters[e].destroy(),this.columnGutters[e]=l("column",this.options)({element:t,track:e})},p.prototype.addRowGutter=function(t,e){this.rowGutters[e]&&this.rowGutters[e].destroy(),this.rowGutters[e]=l("row",this.options)({element:t,track:e})},p.prototype.removeColumnGutter=function(t,e){var i=this;void 0===e&&(e=!0),this.columnGutters[t]&&this.columnGutters[t].destroy(e,function(){delete i.columnGutters[t]})},p.prototype.removeRowGutter=function(t,e){var i=this;void 0===e&&(e=!0),this.rowGutters[t]&&this.rowGutters[t].destroy(e,function(){delete i.rowGutters[t]})},p.prototype.handleDragStart=function(t,e,i){"column"===e?(this.columnGutters[i]&&this.columnGutters[i].destroy(),this.columnGutters[i]=l("column",this.options)({track:i}),this.columnGutters[i].startDragging(t)):"row"===e&&(this.rowGutters[i]&&this.rowGutters[i].destroy(),this.rowGutters[i]=l("row",this.options)({track:i}),this.rowGutters[i].startDragging(t))},p.prototype.destroy=function(e){var i=this;void 0===e&&(e=!0),Object.keys(this.columnGutters).forEach(function(t){return i.columnGutters[t].destroy(e,function(){delete i.columnGutters[t]})}),Object.keys(this.rowGutters).forEach(function(t){return i.rowGutters[t].destroy(e,function(){delete i.rowGutters[t]})})},function(t){return new p(t)}});
//# sourceMappingURL=split-grid.min.js.map
