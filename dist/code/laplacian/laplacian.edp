load "msh3"

// Parameters
func ue = 2.*x*x + 3.*y*y + 4.*z*z + 5.*x*y + 6.*x*z + 1.;
real f = -18.;

// Mesh
mesh3 Th = readmesh3("Sphere.mesh");

// Fespace
fespace Vh(Th, P23d);
Vh u, v;

// Macro
macro Grad3(u) [dx(u), dy(u), dz(u)] //

// Problem
problem Lap3d (u, v, solver=CG)
    = int3d(Th)(
          Grad3(v)' * Grad3(u)
    )
    - int3d(Th)(
          f * v
    )
    + on(0, 1, u=ue)
    ;

// Solve
Lap3d;
cout << "u min: " << u[]. min << " - max: " << u[].max << endl;

// Plot
plot(u, wait=true);

// Save
load "iovtk"
{
	fespace PVh(Th, P1);
	PVh uu = u;
	
	string DataName = "u";
	int[int] Order = [1];
	
	savevtk("Result.vtu", Th, uu, dataname=DataName, order=Order);
}
